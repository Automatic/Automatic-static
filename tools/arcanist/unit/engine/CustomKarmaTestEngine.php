<?php

/**
 * Karma wrapper.
 * Taken from https://secure.phabricator.com/D10007
 */

final class CustomKarmaTestEngine extends ArcanistUnitTestEngine {

  protected function supportsRunAllTests() {
    return true;
  }

  public function run() {
    $working_copy = $this->getWorkingCopy();
    $project_root = $working_copy->getProjectRoot();
    $config_manager = $this->getConfigurationManager();

    // The following configurations are specific to Automatic frontend projects
    $config = 'karma.conf.js'; // karma config file
    $junit = 'test-results.xml'; // test results generated by junit reporter
    $coverage = null; // no support for coverage yet

    $future = $this->buildTestFuture($config);
    $future->resolvex();

    return $this->parseTestResults($junit, $coverage);
  }

  private function buildTestFuture($config) {
    $flags = array(
      '--log-level=info',
      '--no-colors',
    );

    $reporters = array();
    $reporters[] = 'junit';

    if ($this->getEnableCoverage()) {
      $reporters[] = 'coverage';
    }
    $flags[] = '--reporters='.implode(',', $reporters);

    // Project expects karma to be installed through npm
    $karma = 'node_modules/.bin/karma';

    $future = id(new ExecFuture('%s start %Ls %s', $karma, $flags, $config))
      ->setCWD($this->getWorkingCopy()->getProjectRoot());
    return $future;
  }

  private function parseTestResults($junit) {
    $parser = new ArcanistXUnitTestResultParser();
    return $parser->parseTestResults(Filesystem::readFile($junit));
  }
}
